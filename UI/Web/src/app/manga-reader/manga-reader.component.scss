$center-width: 50%;
$side-width: 25%;

$dash-width: 3px;
$pointer-offset: 5px;

img {
  user-select: none;
}

@media(min-width: 600px) {
    .overlay .left .i {
        left: 20px;
    }
    .overlay .right .i {
        right: 20px;
    }
} 

.reading-area {
  position: relative;
  overflow: auto;
  //height: calc(var(--vh)*100); // this needs to be applied on the DOM because it breaks infinite scroller
}

.image-container {
  text-align: center;

  // Original
  //display: block;

  // New (for centering in both axis)
  //display: flex; // Leave this off as it can cutoff the image
  align-items: center;

    &.full-width {
      width: 100vw;
      height: calc(var(--vh)*100);
      display: grid;
    }

    &.full-height {
      height: 100vh;
      display: grid;
    }

    &.original {
      height: 100vh;
      display: grid;
    }

  #image-1 {
    &.double {
      margin: 0 0 0 auto;
    }
  }

  &.reverse {
    flex-direction: row-reverse;
    overflow: unset;
    justify-content: flex-end;
  }
  
  #image-2 {
    &.double {
      margin: 0 auto 0 0;
    }
  }
}

.reader {
    background-color: var(--manga-reader-bg-color);
    overflow: auto;

    img {
        align-items: center;
    }
}


.loading {
    position: absolute;
    left: 48%;
    top: 20%;
    z-index: 1;
}

.title, .subtitle {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

.bottom-menu {
    padding: 20px 20px;
}




.overlay {
  background-color: var(--manga-reader-overlay-bg-color);
  backdrop-filter: var(--manga-reader-overlay-filter); // BUG: This doesn't work on Firefox
  color: var(--manga-reader-overlay-text-color);
}

// Fitting Options

.full-height {
  width: auto;
  margin: 0 auto;
  max-height: calc(var(--vh)*100);
  vertical-align: top;
}

.original {
  align-self: center;
  width: auto;
  margin: 0 auto;
  vertical-align: top;
}

.full-width {
  width: 100%;
  margin: 0 auto;
  vertical-align: top;
  max-width: fit-content;

  &.double {
    width: 50%;

    &.cover {
      width: 100%;
    }
  }
}

.center-double {
  display: flex;
  overflow: unset;
}

.fit-to-width-double-offset {
  max-width: 100%; // max-width fixes center alignment issue
}

.original-double-offset {
  max-width: 100%;
}

.fit-to-height-double-offset {
  position: absolute;
  height: 100vh;
  object-fit: scale-down;
  top: 50%;
  left: 50%;
  transform: translate(-50%, 0%);
  max-width: 100%;
}


// Splitting Icon
.split {
    height: 20px;
    width: 40px;
    z-index: 1;
    top: 0;
    overflow: hidden;
    border: 2px solid #ccc;

    &::before {
        margin-left: 30%;
    }

    /* Control the left side */
    .left-side {
        height: 20px;
        width: 20px;
        background-color: rgba(255, 255, 255, 0.6);
        margin-top: -16px;
    }
    
    /* Control the right side */
    .right-side {
        height: 20px;
        margin-left: 20px;
        width: 20px;
        background-color: rgba(255, 255, 255, 0.6);
        margin-top: -16px;
    }

    .none {
        background-color: rgba(255, 255, 255, 0.5);
    }
  }
  
  ::ng-deep {
    .custom-slider .ngx-slider .ngx-slider-bar {
      background: #e9ffe2;
      height: 2px;
    }
    .custom-slider .ngx-slider .ngx-slider-selection {
      background: var(--primary-color);
    }
  
    .custom-slider .ngx-slider .ngx-slider-pointer {
      width: 8px;
      height: 16px;
      top: auto; /* to remove the default positioning */
      bottom: 0;
      background-color: var(--primary-color); // #333;
      border-top-left-radius: 3px;
      border-top-right-radius: 3px;
    }
  
    .custom-slider .ngx-slider .ngx-slider-pointer:after {
      display: none;
    }
  
    .custom-slider .ngx-slider .ngx-slider-bubble {
      bottom: 14px;
      font-weight: bold;
    }
  
    .custom-slider .ngx-slider .ngx-slider-limit {
      font-weight: bold;
      color: white !important;

    }

  
    .custom-slider .ngx-slider .ngx-slider-tick {
      width: 1px;
      height: 10px;
      margin-left: 4px;
      border-radius: 0;
      background: #ffe4d1;
      top: -1px;
    }
  
    .custom-slider .ngx-slider .ngx-slider-tick.ngx-slider-selected {
      background: var(--primary-color);
    }
  }

  .webtoon-images {
      text-align: center;
      width: 100%;
  }

  //$pagination-bg: rgba(0, 0, 0, 0);
  $pagination-bg: rgba(0, 0, 255, 0.4);

  .pagination-area {
    cursor: pointer;
    z-index: 2;

    i {
        color: white;
        font-size: 42px;
    }

    .right {
      position: absolute;
      right: 0px;
      top: 0px;
      width: $side-width;
      background: $pagination-bg;
    }
    
    .top {
        position: absolute;
        right: 0px;
        top: 0px;
        width: 100%;
        background: $pagination-bg;
    }
    
    .left {
        position: absolute;
        left: 0px;
        top: 0px;
        width: $side-width;
        background: $pagination-bg;
    }
    
    .bottom {
        position: fixed; // I couldn't figure out how to do this with abs, so only the bottom bar will not be scrollable
        left: 0px;
        bottom: 0px;
        width: 100%;
        background: $pagination-bg;
    }
  }

.highlight {
  background-color: var(--manga-reader-next-highlight-bg-color) !important;
  animation: fadein .5s both;
  backdrop-filter: blur(10px);
}
.highlight-2 {
  background-color: var(--manga-reader-prev-highlight-bg-color) !important;
  animation: fadein .5s both;
  backdrop-filter: blur(10px);
}

  
.bookmark-effect {
    animation: bookmark 0.7s cubic-bezier(0.165, 0.84, 0.44, 1);
}

@keyframes bookmark {
    0%, 100% {
        border: 0px;
    }
    50% {
        border: 5px solid var(--primary-color);
    }
}
